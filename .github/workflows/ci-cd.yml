name: CI/CD
on:
  push:
    branches:
      - main
jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
  #       with: 
  #         persist-credentials: false
  #     - name: Cache Node modules
  #       uses: actions/cache@v2
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-
  #     - name: Install
  #       run: npm install --no-save
  #     - name: Install Playwright
  #       run: npx playwright install
  #     - name: Test
  #       run: npm run test
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with: 
          persist-credentials: false
      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install
        run: npm install --no-save
      - name: Sync data
        run: npm run data:download
      - name: Build
        run: npm run build     
      - name: Deploy 
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: out
          clean: true # Automatically remove deleted files from the deploy branch